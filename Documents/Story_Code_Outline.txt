This file describes the different ways a story is constructed

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Scenarios~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Scenarios contains a description and different options for the user to make. 
Sometimes the options are hidden unless a previous and specific option was chosen (determined by a tag string).
Sometimes the options aren't displayed and only used to push the user to the next scenario, which could be conditional.
The end scenario will have null options. Where else is there to go?
Final scenario in the Scenario list will be a tie breaker to make sure the user gets a resulting alignment.

				For any scenario, this is the basic template. If transitional, only transitional options can be used.
new Scenario(
			"scenario_id_string", 
			"description_string", 
			Arrays.asList(
					
					new Option(
							etc...
							),
					new etc...
					)
			), 
			
			For end scenario. There isn't anywhere else to go!
new Scenario(
			"scenario_id_string", 
			"description_string", 
			null
			), 
			
			Tie breaker scenario, contains 9 options, each one representing one of the alignments.
			Must be declared at the end of the scenario list and only appears if the user has the same amount of points for different alignments.
			Id can be anything as the controller automatically considers the final scenario in the list to be a tie breaker.
			Each option must have required tag equal to tie_align where align is equal to one of: 
				"LG", "NG", "CG", "LN", "TN", "CN", "LE", "NE", "CE"
				(these are 2 letter representations of each alignment)
new Scenario(
			"scenario_id_string", 
			"description_string", 
			Arrays.asList(
					
					new Option(
							"desc",
							""
							Alignment.specific_align_here,
							Arrays.asList("tie_specific_align"),
							"result"
							),
					new etc... x8
					)
			), 

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Options~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

			For an option that requires more specific options in the next scenario
new Option(
		"description_string",
		"scenario_pointer_string"
		),
		
			For a standard option that alters the user's alignment and may or may not provide tags for the story to change by later on
new Option(
		"description_string",
		"scenario_pointer_string",
		Arrays.asList("tag_string1", "tag_string2", ... "tag_string_n") OR null if no tags desired,
		Alignment.specific_align_here,
		"direct_result_description_string"
		),
		
			Similar to above, though the option will only appear if the user possesses the correct tag(s)
new Option(
		"description_string",
		"scenario_pointer_string",
		Arrays.asList("tag_string1", "tag_string2", ... "tag_string_n") OR null if no tags desired,
		Alignment.specific_align_here,
		Arrays.asList("required_tag_string1", "req_tag_string2", ... "req_tag_string_n"),
		"direct_result_description_string"
		),
		
			Used for transition scenarios that 
			1) only serve as story and don't require user input 
			2) Ditto but branch into different scenarios based on past user choices
			isShown boolean is always set to false regardless of input, it is only a parameter to differentiate (null, string) from the standard constructor
new Option(
		Arrays.asList("required_tag_string1", "req_tag_string2", ... "req_tag_string_n") OR null if no required tags,
		"scenario_pointer_string",
		isShown_boolean
		),